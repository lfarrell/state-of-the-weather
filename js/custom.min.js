var margins={top:20,right:50,left:100,bottom:75},parse_date=d3.time.format("%m/%Y").parse,height=400-margins.top-margins.bottom;localStorage.clear();localStorage.setItem("path","all_by_state/US.csv");localStorage.setItem("month","01");localStorage.setItem("state-name","US");var div=d3.select("body").append("div").attr("class","tooltip").style("opacity",0);
d3.select("#state").on("change",function(){var b=this.options[this.selectedIndex].innerHTML,c=d3.select(this),a=c.prop("value"),d="all_by_state/"+a+".csv";localStorage.getItem("month");d3.selectAll(".selected_state").text(b);c.prop("value","");localStorage.setItem("path",d);localStorage.setItem("state",a);localStorage.setItem("state-name",b);render()});
d3.select("#month").on("change",function(){var b=this.options[this.selectedIndex].innerHTML,c=d3.select(this),a=c.prop("value");localStorage.setItem("month",a);d3.selectAll(".selected_month").text(b);c.prop("value","");render()});
var render=_.debounce(function(){d3.selectAll(".svg").remove();var b="#543005 #8c510a #bf812d #dfc27d #f6e8c3 #f5f5f5 #c7eae5 #80cdc1 #35978f #01665e #003c30".split(" "),c="#a50026 #d73027 #f46d43 #fdae61 #fee090 #ffffbf #e0f3f8 #abd9e9 #74add1 #4575b4 #313695".split(" ").reverse(),a=localStorage.getItem("path"),d=localStorage.getItem("month"),h=localStorage.getItem("state-name"),C="US"===h?"the "+h:h,g=window.innerWidth-100-margins.right-margins.left;d3.csv(a,function(a){function h(a,b,c,d,e){a=
    d3.select(a).append("svg").attr("width",g+margins.left+margins.right).attr("height",110).attr("class","svg").call(b).selectAll("bar").data(e);a.enter().append("rect");a.attr("x",function(a){return l(parse_date(a.date))}).attr("width",G).attr("y",0).attr("height",80).translate([margins.left,0]).style("fill",function(a){return c(a.anomaly)}).on("mouseover",function(a){d3.select(this).attr("height",100);b.show.call(this,a)}).on("mouseout",function(a){d3.select(this).attr("height",80);b.hide.call(this,
    a)});return a}function t(a,b,c){a.append("path#"+b).attr("fill","none").attr("stroke",c).attr("stroke-width",2).translate([margins.left,margins.top]);return a}function u(a,b,c){return d3.select(a).transition().duration(1E3).ease("sin-in-out").attr("d",b(c))}function D(a,b,c,h){var e=c.split("_")[0].substr(1),f=a.append("g").attr("class","focus").style("display","none");f.append("line").attr("class","y0").attr({x1:0,y1:0,x2:0,y2:height});a.append("rect").attr("class","overlay").attr("width",g).attr("height",
        height).on("mouseover touchstart",function(){f.style("display",null)}).on("mouseout touchend",function(){f.style("display","none");div.transition().duration(250).style("opacity",0)}).on("mousemove touchmove",function(){var a=l.invert(d3.mouse(this)[0]),y=H(b,a,1),g=b[y-1],y=b[y];void 0===y&&(y=Infinity);a=a-g.key>y.key-a?y:g;g=[l(parse_date(a.date))+margins.left,margins.top];d3.select(c+" line.y0").translate(g);div.transition().duration(100).style("opacity",.9);div.html('<h4 class="text-center">'+
        stringDate(a.month)+" ("+a.year+')</h4><ul class="list-unstyled"<li>Historical Avg: '+monthAvg(p,e,d)+" "+h+"</li><li>Actual Avg: "+a.value+" "+h+"</li><li>Departure from Avg: "+a.anomaly+" "+h+"</li></ul>").style("top",d3.event.pageY-108+"px").style("left",d3.event.pageX-28+"px")}).translate([margins.left,margins.top]);return a}a.forEach(function(a){a.date=a.month+"/"+a.year;a.value=+a.value;a.anomaly=+a.anomaly});var p=avgValues(a),m=_.sortByOrder(a,["month","year"],["asc","asc"]),r=dataFilter(m,
    "drought",d,p),f=dataFilter(m,"max",d,p),e=dataFilter(m,"min",d,p),n=dataFilter(m,"precip",d,p),k=dataFilter(m,"temp",d,p),m=maxMin(r,"value"),v=maxMin(f,"value"),w=maxMin(e,"value"),x=maxMin(n,"value"),q=maxMin(k,"value"),H=d3.bisector(function(a){return parse_date(a.date)}).right,l=d3.time.scale().domain(d3.extent(a,function(a){return parse_date(a.date)})).range([0,g]);yScale(r,height);var z=yScale(f,height),A=yScale(e,height);a=yScale(n,height);var B=yScale(k,height),E=getAxis(l,"bottom"),I=getAxis(z,
    "left"),J=getAxis(A,"left"),K=getAxis(a,"left"),F=getAxis(B,"left"),G=barWidth(g,n);d3.selectAll(".selected-month").text(stringDate(d));d3.selectAll(".selected-state").text(C);var L=stripColors(c,k,"temp");d3.select("#hottest").text(q.max[4].value);d3.select("#hottest-year").text(q.max[4].year);d3.select("#least-hottest").text(q.min[0].value);d3.select("#least-hottest-year").text(q.min[0].year);q=showAxises("#temp_div","#avg_temp_line",g,E,F,"Avg. Temperature (F)");F=lineGenerator(l,B,"value");B=
    lineGenerator(l,B,"mean");q=t(q,"temp_line","steelblue");u("#temp_line",F,k);t(q,"temp_avg_line","yellow");u("#temp_avg_line",B,k);D(q,k,"#temp_div","degrees");B=stripScale(k,"anomaly");q=d3.tip().attr("class","d3-tip").html(function(a){return'<h4 class="text-center">'+stringDate(d)+"("+a.year+')</h4><ul class="list-unstyled"><li>Historical Avg: '+monthAvg(p,"temp",d)+" degrees</li><li>Actual Avg: "+a.value+" degrees</li><li>Departure from Avg: "+a.anomaly+" degrees</li></ul>"});drawLegend("#temp_div",
    c,k,"anomaly");h("#temp_div",q,L,B,k);d3.select("#maxtemp").text(v.max[4].value);d3.select("#maxtemp-year").text(v.max[4].year);d3.select("#least-maxtemp").text(v.min[0].value);d3.select("#least-maxtemp-year").text(v.min[0].year);k=showAxises("#max_div","#max_temp",g,E,I,"Avg. Max. Temperature (F)");v=lineGenerator(l,z,"value");z=lineGenerator(l,z,"mean");k=t(k,"max_line","firebrick");u("#max_line",v,f);t(k,"max_avg_line","yellow");u("#max_avg_line",z,f);D(k,f,"#max_div","degrees");z=d3.tip().attr("class",
    "d3-tip").html(function(a){return'<h4 class="text-center">'+stringDate(d)+"("+a.year+')</h4><ul class="list-unstyled"><li>Historical Avg: '+monthAvg(p,"max",d)+" degrees</li><li>Actual Avg: "+a.value+" degrees</li><li>Departure from Avg: "+a.anomaly+" degrees</li></ul>"});k=stripColors(c,f,"max");v=stripScale(f,"anomaly");drawLegend("#max_div",c,f,"anomaly");h("#max_div",z,k,v,f);d3.select("#mintemp").text(w.max[4].value);d3.select("#mintemp-year").text(w.max[4].year);d3.select("#least-mintemp").text(w.min[0].value);
    d3.select("#least-mintemp-year").text(w.min[0].year);f=showAxises("#min_div","#min_temp",g,E,J,"Avg. Min. Temperature (F)");w=lineGenerator(l,A,"value");A=lineGenerator(l,A,"mean");f=t(f,"min_line","steelblue");u("#min_line",w,e);t(f,"min_avg_line","yellow");u("#min_avg_line",A,e);D(f,e,"#min_div","degrees");f=d3.tip().attr("class","d3-tip").html(function(a){return'<h4 class="text-center">'+stringDate(d)+"("+a.year+')</h4><ul class="list-unstyled"><li>Historical Avg: '+monthAvg(p,"min",d)+" degrees</li><li>Actual Avg: "+
        a.value+" degrees</li><li>Departure from Avg: "+a.anomaly+" degrees</li></ul>"});A=stripColors(c,e,"min");w=stripScale(e,"anomaly");drawLegend("#min_div",c,e,"anomaly");h("#min_div",f,A,w,e);d3.select("#wettest").text(x.max[4].value);d3.select("#wettest-year").text(x.max[4].year);d3.select("#least-wettest").text(x.min[0].value);d3.select("#least-wettest-year").text(x.min[0].year);e=showAxises("#precip_div","#avg_precip",g,E,K,"Avg. Precipitation (Inches)");x=lineGenerator(l,a,"value");a=lineGenerator(l,
        a,"mean");e=t(e,"precip_line","steelblue");u("#precip_line",x,n);t(e,"precip_avg_line","yellow");u("#precip_avg_line",a,n);a=d3.tip().attr("class","d3-tip").html(function(a){return'<h4 class="text-center">'+stringDate(d)+" ("+a.year+')</h4><ul class="list-unstyled"<li>Historical Avg: '+monthAvg(p,"precip",d)+" inches</li><li>Actual Avg: "+a.value+" inches</li><li>Departure from Avg: "+a.anomaly+" inches</li></ul>"});D(e,n,"#precip_div","inches");e=stripColors(b,n,"precip");x=stripScale(n,"anomaly");
    drawLegend("#precip_div",b,n,"anomaly");h("#precip_div",a,e,x,n);d3.select("#least-driest").text(m.max[4].value);d3.select("#least-driest-year").text(m.max[4].year);d3.select("#driest").text(m.min[0].value);d3.select("#driest-year").text(m.min[0].year);n=stripColors(b,r,"drought");m=stripScale(r,"anomaly");e=d3.tip().attr("class","d3-tip").html(function(a){return'<h4 class="text-center">'+stringDate(d)+" ("+a.year+')</h4><ul class="list-unstyled"<li>Historical Avg: '+monthAvg(p,"drought",d)+"</li><li>Actual Avg: "+
        a.value+"</li><li>Departure from Avg: "+a.anomaly+"</li></ul>"});drawLegend("#drought_div",b,r,"anomaly");h("#drought_div",e,n,m,r);r=d3.selectAll(".row");r.classed("opaque",!1);r.classed("hide",!1);d3.selectAll("#load").classed("hide",!0)})},400);function dataFilter(b,c,a,d){b=b.filter(function(b){return a?b.type===c&&b.month===a:b.type===c});a&&b.forEach(function(b){b.mean=monthAvg(d,c,a)});return b}function monthAvg(b,c,a){return b[c][parseInt(a,10)-1].value.toFixed(2)}
function avgValues(b){var c=d3.range(1,13),a={drought:[],max:[],min:[],precip:[],temp:[]},d,h;["drought","max","min","precip","temp"].forEach(function(C){c.forEach(function(c){c=10>c?"0"+c:""+c;d=_.findWhere(b,{month:c,type:C});h=d.value-d.anomaly;a[C].push({key:c,value:h})})});return a}function maxMin(b,c){var a=_.sortBy(b,c),d=a.slice(0,5),a=a.slice(-5);return{min:d,max:a}}function barWidth(b,c){return _.floor(b/c.length,3)}
function yScale(b,c){return d3.scale.linear().range([0,c]).domain([d3.max(b,\u0192("value")),0])}function stripColors(b,c,a){return d3.scale.quantize().domain(d3.extent(c,function(a){return a.anomaly})).range(b)}function stripScale(b,c){return d3.scale.linear().domain(d3.extent(b,function(a){return a[c]})).range([0,1])}
function drawLegend(b,c,a,d){a=stripColors(c,a,d);c=b.substr(1);b=d3.select(b).append("svg").classed("svg",!0).classed("legend",!0).attr("width",1E3);b.append("g").attr("class","legend-"+c).attr("width",1E3).translate([margins.left,margins.top]);a=d3.legend.color().shapeWidth(60).orient("horizontal").scale(a);b.select(".legend-"+c).call(a);return b}function getAxis(b,c){return d3.svg.axis().scale(b).orient(c)}
function showAxises(b,c,a,d,h,C){var g=d3.select(b).append("svg.svg");g.attr("width",a+margins.left+margins.right).attr("height",height+margins.top+margins.bottom).attr("id",c);g.append("g").attr("class","x axis").translate([margins.left,height+margins.top]);d3.selectAll(b+" g.x").call(d);g.append("g").attr("class","y axis").translate([margins.left,margins.top]);d3.selectAll(b+" g.y").call(h);g.append("text").attr("transform","rotate(-90)").attr("x",-height/3).attr("y",6).attr("dy","3.71em").style("text-anchor",
    "end").text(C);return g}function lineGenerator(b,c,a){return d3.svg.line().interpolate("monotone").x(function(a){return b(parse_date(a.date))}).y(function(b){return c(b[a])})}function stringDate(b){return"January February March April May June July August September October November December".split(" ")[parseInt(b,10)-1]}render();window.addEventListener("resize",render);